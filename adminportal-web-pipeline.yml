trigger:
- develop

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages: 
- stage: Buid 
  displayName: Build Image
  jobs:
  - job: Build
    displayName:  Build-job
    pool:
      vmImage: 'ubuntu-latest'
    steps: 
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'dockerhub-connection'
        repository: 'darshanadinushal/adminportalclientapp'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'manifests'
        publishLocation: 'Container'

- stage: Deploy 
  displayName: Deploy Image
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps: 
    - script: |
        echo 1 >  "$(System.ArtifactsDirectory)"
        echo 2 > "$(System.ArtifactsDirectory)/manifests"
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'manifests'
        itemPattern: '**/*.yaml'
        targetPath: '$(System.ArtifactsDirectory)'

    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'adminportal-kubernetes-connection'
        namespace: 'default'
        manifests: '$(System.ArtifactsDirectory)/configuration/kubernetes/deployment.yaml'
        containers: 'darshanadinushal/adminportalclientapp:$(tag)'
